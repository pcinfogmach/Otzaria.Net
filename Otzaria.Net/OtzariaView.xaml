<UserControl x:Class="Otzaria.Net.OtzariaView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Otzaria.Net"
             xmlns:fs="clr-namespace:FileSystemBrowser"
             xmlns:c="clr-namespace:MyControls"
             mc:Ignorable="d"
             FlowDirection="RightToLeft"
             d:DesignHeight="450" d:DesignWidth="350" FontFamily="Segoe UI Semilight"
             FontSize="14"
             x:Name="userControl">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Otzaria.Net;component/Themes/Generic.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Otzaria.Net;component/Themes/TabPagerListBox.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <TabControl x:Name="PagerTabControl" Grid.Row="0"
            Style="{StaticResource PagerTabControlStyle}">
            <TabItem IsSelected="{Binding IsChecked, ElementName=OpenFileToggleButton}">
                <fs:FsViewerControl x:Name="FSNavPanel"
                                    SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=local:OtzariaView}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
            </TabItem>
            
            <TabItem>
                <c:CostumeTabControl x:Name="ViewerTabControl"/>
            </TabItem>
        </TabControl>

        <Border Grid.Row="1"
                Background="{x:Static SystemColors.ControlLightLightBrush}">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="2" Color="LightGray" BlurRadius="3" Direction="160"/>
            </Border.Effect>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <ToggleButton x:Name="OpenFileToggleButton" IsChecked="True" Unchecked="OpenFileToggleButton_Unchecked">
                    <Path Data="M19,2L14,6.5V17.5L19,13V2M6.5,5C4.55,5 2.45,5.4 1,6.5V21.16C1,21.41 1.25,21.66 1.5,21.66C1.6,21.66 1.65,21.59 1.75,21.59C3.1,20.94 5.05,20.5 6.5,20.5C8.45,20.5 10.55,20.9 12,22C13.35,21.15 15.8,20.5 17.5,20.5C19.15,20.5 20.85,20.81 22.25,21.56C22.35,21.61 22.4,21.59 22.5,21.59C22.75,21.59 23,21.34 23,21.09V6.5C22.4,6.05 21.75,5.75 21,5.5V7.5L21,13V19C19.9,18.65 18.7,18.5 17.5,18.5C15.8,18.5 13.35,19.15 12,20V13L12,8.5V6.5C10.55,5.4 8.45,5 6.5,5V5Z"/>
                </ToggleButton>

                <!--<ToggleButton x:Name="OpenBooksMenu">
                    <Path Data="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"/>
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=OpenBooksPopup, Path=IsOpen}" Value="True">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Popup x:Name="CurrentBooksPopup" Opened="CurrentBooksPopup_Opened" MaxHeight="300"
                       StaysOpen="False" Placement="Top" PlacementTarget="{Binding ElementName=OpenBooksMenu}"
                       IsOpen="{Binding IsChecked, ElementName=OpenBooksMenu, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                        <ListBox x:Name="CurrentBooksListBox" SelectionChanged="CurrentBooksListBox_SelectionChanged"/>
                </Popup>-->
                
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
